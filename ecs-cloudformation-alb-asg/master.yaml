Description: >

  This template deploys a VPC, with a pair of public and private subnets spread 
  across two Availabilty Zones. It deploys an Internet Gateway, with a default 
  route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ), 
  and default routes for them in the private subnets.

  It then deploys a highly available ECS cluster using an AutoScaling Group, with 
  ECS hosts distributed across multiple Availability Zones. 

  Finally, it deploys a pair of example ECS services from containers published in 
  Amazon EC2 Container Registry (Amazon ECR).
  >

Resources:
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/ecs-cloudformation-alb-asg/infrastructure/vpc.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VpcCIDR: 10.180.0.0/16
        PublicSubnet1CIDR: 10.180.8.0/24
        PublicSubnet2CIDR: 10.180.16.0/24
        PublicSubnet3CIDR: 10.180.20.0/24
        PrivateSubnet1CIDR: 10.180.24.0/24
        PrivateSubnet2CIDR: 10.180.32.0/24
        PrivateSubnet3CIDR: 10.180.40.0/24

  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/ecs-cloudformation-alb-asg/infrastructure/security-groups.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC

  ALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/ecs-cloudformation-alb-asg/infrastructure/load-balancers.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC
        Subnets: !GetAtt VPC.Outputs.PrivateSubnets
        SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup
        # CertificateName: Test-app

  ECS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/ecs-cloudformation-alb-asg/infrastructure/ecs-cluster.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        InstanceType: t2.large
        MinSize: 1
        MaxSize: 3
        VPC: !GetAtt VPC.Outputs.VPC
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
        Subnets: !GetAtt VPC.Outputs.PrivateSubnets

  WebsiteService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/ecs-cloudformation-alb-asg/services/test-app/service.yaml
      Parameters:
        VPC: !GetAtt VPC.Outputs.VPC
        Cluster: !GetAtt ECS.Outputs.Cluster
        DesiredCount: 2
        MaxCount: 3
        Listener: !GetAtt ALB.Outputs.Listener
        Path: /
        ECSServiceAutoScalingRoleARN: !GetAtt ECS.Outputs.ECSServiceAutoScalingRole

  LifecycleHook:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/ecs-cloudformation-alb-asg/infrastructure/lifecyclehook.yaml
      Parameters:
        Cluster: !GetAtt ECS.Outputs.Cluster
        ECSAutoScalingGroupName: !GetAtt ECS.Outputs.ECSAutoScalingGroupName

  ApiGateway:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/ecs-cloudformation-alb-asg/infrastructure/apiGateway.yaml
      Parameters:
        VPC: !GetAtt VPC.Outputs.VPC
        SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup
        PrivateLoadBalancerListener: !GetAtt ALB.Outputs.Listener
        PrivateSubnet1: !GetAtt VPC.Outputs.PrivateSubnet1
        PrivateSubnet2: !GetAtt VPC.Outputs.PrivateSubnet2
        PrivateSubnet3: !GetAtt VPC.Outputs.PrivateSubnet3

  # Route53:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: https://s3.amazonaws.com/ecs-cloudformation-alb-asg/infrastructure/route53.yaml
  #     Parameters:
  #       DomainName: 
  #       HostedZoneId:
  #       DNSName: !GetAtt ALB.Outputs.LoadBalancerUrl
  #       LoadBalancerCanonicalHostedZoneID: !GetAtt ALB.Outputs.CanonicalHostedZoneID

Outputs:
  WebsiteServiceUrl:
    Description: The URL endpoint for the product service
    Value: !Join ["", [!GetAtt ALB.Outputs.LoadBalancerUrl, "/"]]

  APIURL:
    Description: The URL endpoint for the Gateway api
    Value: !Join ["", [!GetAtt ApiGateway.Outputs.ApiUrl, "/"]]    
